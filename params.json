{"name":"ActionBar-PullToRefresh","tagline":"A modern implementation of the pull-to-refresh interaction for #android","body":"# ActionBar-PullToRefresh\r\n\r\n![ActionBar-PullToRefresh](https://github.com/chrisbanes/ActionBar-PullToRefresh/raw/master/header.png)\r\n\r\nActionBar-PullToRefresh provides an easy way to add a modern version of the pull-to-refresh interaction to your application.\r\n\r\nPlease note that this is __not__ an update to [Android-PullToRefresh](https://github.com/chrisbanes/Android-PullToRefresh), this has been created from new. You should think of this as Android-PullToRefresh's younger, leaner cousin.\r\n\r\n### This is a Preview\r\nPlease note that this is currently in a preview state. This basically means that the API is not fixed and you should expect changes between releases.\r\n\r\n---\r\n\r\n## Sample\r\n\r\nEventually the sample will be available to download on Google Play. As we're not stable yet you can find the APKs [here](https://drive.google.com/folderview?id=0BxAFUoBj0OjaYTd3SUkzYjIydG8&usp=sharing).\r\n\r\n#### Video\r\n\r\n[![Sample Video](http://img.youtube.com/vi/YOYtPF-4RPg/0.jpg)](https://www.youtube.com/watch?v=YOYtPF-4RPg)\r\n\r\n---\r\n\r\n## Supported Views\r\n\r\nActionBar-PullToRefresh has in-built support for:\r\n\r\n * AbsListView derivatives (ListView & GridView).\r\n * ScrollView\r\n * WebView\r\n\r\nIf the View you want to use is not listed above, you can easily add support in your own code by providing a `ViewDelegate`. See the `ViewDelegate` section below for more info.\r\n\r\n---\r\n\r\n## Usage\r\nYou just need to create an instance of `PullToRefreshAttacher`, giving it the Activity and the View for which will scroll.\r\n\r\n``` java\r\nprivate PullToRefreshAttacher mPullToRefreshHelper;\r\n\r\n@Override\r\npublic void onCreate(Bundle savedInstanceState) {\r\n    super.onCreate(savedInstanceState);\r\n        \r\n    // Get View for which the user will scrollâ€¦\r\n    View scrollableView = findViewById(R.id.blah); \r\n\r\n    // Create a PullToRefreshAttacher instance\r\n    mPullToRefreshHelper = new PullToRefreshAttacher(this);\r\n\r\n    // Set the Refreshable View and provide the refresh listener\r\n    mPullToRefreshAttacher.setRefreshableView(scrollableView, this);\r\n}\r\n```\r\nSee the [ListView](https://github.com/chrisbanes/ActionBar-PullToRefresh/blob/master/samples/stock/src/uk/co/senab/actionbarpulltorefresh/samples/stock/ListViewActivity.java) sample for more info.\r\n\r\n### Fragments\r\n\r\nOne thing to note is that the `PullToRefreshAttacher` **needs** to be created in the `onCreate()` phase of the Activity. If you plan on using this library with Fragments then the best practice is for your Activity to create the `PullToRefreshAttacher`, and then have your fragments retrieve it from the Activity.\r\n\r\nAn example is provided in the [Fragment & Tabs](https://github.com/chrisbanes/ActionBar-PullToRefresh/blob/master/samples/stock/src/uk/co/senab/actionbarpulltorefresh/samples/stock/FragmentTabsActivity.java) sample.\r\n\r\n---\r\n\r\n## Customisation\r\n\r\nThere are many ways you can customise the pull-to-refresh experience to your needs. See the [GridView](https://github.com/chrisbanes/ActionBar-PullToRefresh/blob/master/samples/stock/src/uk/co/senab/actionbarpulltorefresh/samples/stock/GridViewActivity.java) sample for more info on all of these.\r\n    \r\n### ViewDelegate\r\n\r\nViewDelegates provide support for handling scrollable Views. The main use of a `ViewDelegate` is to being able to tell when a scrollable view is scrolled to the top. There is currently inbuilt support for:\r\n\r\n * AbsListView classes (through [AbsListViewDelegate](https://github.com/chrisbanes/ActionBar-PullToRefresh/blob/master/library/src/uk/co/senab/actionbarpulltorefresh/library/viewdelegates/AbsListViewDelegate.java))\r\n * ScrollView (through [ScrollViewDelegate](https://github.com/chrisbanes/ActionBar-PullToRefresh/blob/master/library/src/uk/co/senab/actionbarpulltorefresh/library/viewdelegates/ScrollViewDelegate.java))\r\n * WebView (through [WebViewDelegate](https://github.com/chrisbanes/ActionBar-PullToRefresh/blob/master/library/src/uk/co/senab/actionbarpulltorefresh/library/viewdelegates/WebViewDelegate.java))\r\n\r\nSo what if you want the view you want to use a view which isn't in the list above? Well you can just provide your own `ViewDelegate`.\r\n\r\n``` java\r\n// Create a PullToRefresh Attacher\r\nmPullToRefreshAttacher = new PullToRefreshAttacher(this);\r\n\r\n// Create ViewDelegate which can handle your scrollable view.\r\n// In this case we're creating a ficticious class\r\nPullToRefreshAttacher.ViewDelegate delegate = new XYZViewDelegate();\r\n\r\n// Set the Refreshable View, along with your ViewDelegate\r\nmPullToRefreshAttacher.setRefreshableView(xyzView, delegate, listener);\r\n```\r\n\r\n### Options\r\nWhen instatiating a `PullToRefreshAttacher` you can provide an `Options` instance which contains a number of configuration elements:\r\n\r\n * `headerLayout`: Layout resource to be inflated as the header view (see below).\r\n * `headerTransformer`: The HeaderTransformer for the heard view (see below).\r\n * `headerInAnimation`: The animation resource which is used when the header view is shown.\r\n * `headerOutAnimation`: The animation resource which is used when the header view is hidden.\r\n * `refreshScrollDistance`: The vertical distance (percentage of the scrollable view height) that the user needs to scroll for a refresh to start.\r\n\r\n### HeaderTransformers\r\nHeaderTransformers are responsible for updating the header view to match the current state. If you do not provide a HeaderTransformer, there is a default implementation created for you called `DefaultHeaderTransformer`. This default implementation is what provides the default behaviour (growing progress bar, etc).\r\n\r\n### Customised Header View layout\r\nIf you feel that the default header view layout does not provide what you require, you can provide your own which is inflated for you. For the majority of cases, you will probably want to provide your own `HeaderTransformer` as well, to update your custom layout.\r\n\r\n---\r\n\r\n## License\r\n\r\n    Copyright 2013 Chris Banes\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}