{"name":"ActionBar-PullToRefresh","tagline":"A modern implementation of the pull-to-refresh interaction for #android","body":"# ActionBar-PullToRefresh\r\n\r\n![ActionBar-PullToRefresh](https://github.com/chrisbanes/ActionBar-PullToRefresh/raw/master/header.png)\r\n\r\nActionBar-PullToRefresh provides an easy way to add a modern version of the pull-to-refresh interaction to your application.\r\n\r\nPlease note that this is __not__ an update to [Android-PullToRefresh](https://github.com/chrisbanes/Android-PullToRefresh), this has been created from new. You should think of this as Android-PullToRefresh's younger, leaner cousin.\r\n\r\n### This is a Preview\r\nPlease note that this is currently in a preview state. This basically means that the API is not fixed and you should expect changes between releases.\r\n\r\n---\r\n\r\n## Sample Apps\r\n\r\nThere are two sample applications, the stock sample which uses the standard library and is therefore has a `minSdkVersion` of 14. There is also a sample which uses the ActionBarSherlock extra so has a `minSdkVersion` of 7.\r\n\r\n### Stock Sample\r\n[![Get it on Google Play](http://www.android.com/images/brand/get_it_on_play_logo_small.png)](http://play.google.com/store/apps/details?id=uk.co.senab.actionbarpulltorefresh.samples.stock)\r\n\r\n### ActionBarSherlock Sample\r\n[![Get it on Google Play](http://www.android.com/images/brand/get_it_on_play_logo_small.png)](http://play.google.com/store/apps/details?id=uk.co.senab.actionbarpulltorefresh.samples.actionbarsherlock)\r\n\r\n## Video\r\n\r\n[![Sample Video](http://img.youtube.com/vi/YOYtPF-4RPg/0.jpg)](https://www.youtube.com/watch?v=YOYtPF-4RPg)\r\n\r\n---\r\n\r\n## Supported Views\r\n\r\nActionBar-PullToRefresh has in-built support for:\r\n\r\n * AbsListView derivatives (ListView & GridView).\r\n * ScrollView\r\n * WebView\r\n\r\nIf the View you want to use is not listed above, you can easily add support in your own code by providing a `ViewDelegate`. See the `ViewDelegate` section below for more info.\r\n\r\n---\r\n\r\n## Usage\r\n\r\nThere are two ways to use this library.\r\n\r\n### PullToRefreshAttacher only\r\n\r\nThis is the simplest method, as it's just two lines of code. You just need to create an instance of `PullToRefreshAttacher`, giving it the Activity and the View for which will scroll.\r\n\r\n``` java\r\nprivate PullToRefreshAttacher mPullToRefreshAttacher;\r\n\r\n@Override\r\npublic void onCreate(Bundle savedInstanceState) {\r\n    super.onCreate(savedInstanceState);\r\n        \r\n    // Get View for which the user will scrollâ€¦\r\n    View scrollableView = findViewById(R.id.blah); \r\n\r\n    // Create a PullToRefreshAttacher instance\r\n    mPullToRefreshAttacher = PullToRefreshAttacher.get(this);\r\n\r\n    // Add the Refreshable View and provide the refresh listener\r\n    mPullToRefreshAttacher.addRefreshableView(scrollableView, this);\r\n}\r\n```\r\nSee the [ListView](samples/stock/src/uk/co/senab/actionbarpulltorefresh/samples/stock/ListViewActivity.java) sample for more info.\r\n\r\n### PullToRefreshLayout\r\n\r\nUsing a `PullToRefreshLayout` gives the library better control over the touch events, and should be used if you find that using the above method is not working correctly.\r\n\r\nExamples of when you would use `PullToRefreshLayout` are:\r\n\r\n* Clickable view with refreshable View\r\n* Not being able to pull from 'empty' space within the refreshable view.\r\n\r\nThe first thing you need to do is wrap your refreshable view in a `PullToRefreshLayout`:\r\n\r\n```xml\r\n<uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:id=\"@+id/ptr_layout\"\r\n    android:layout_width=\"fill_parent\"\r\n    android:layout_height=\"fill_parent\">\r\n    \r\n    <!-- Your content, here we're using a ScrollView -->\r\n\r\n    <ScrollView\r\n        android:layout_width=\"fill_parent\"\r\n        android:layout_height=\"fill_parent\">\r\n            \r\n    </ScrollView>\r\n\r\n</uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout>\r\n```\r\n\r\nThen in your Activity, get a `PullToRefreshAttacher` and give it to the `PullToRefreshLayout`, along with the `OnRefreshListener`.\r\n\r\n``` java\r\nprivate PullToRefreshAttacher mPullToRefreshAttacher;\r\n\r\n@Override\r\npublic void onCreate(Bundle savedInstanceState) {\r\n    super.onCreate(savedInstanceState);\r\n        \r\n    // Create a PullToRefreshAttacher instance\r\n    mPullToRefreshAttacher = PullToRefreshAttacher.get(this);\r\n\r\n    // Retrieve the PullToRefreshLayout from the content view\r\n    PullToRefreshLayout ptrLayout = (PullToRefreshLayout) findViewById(R.id.ptr_layout);\r\n\r\n    // Give the PullToRefreshAttacher to the PullToRefreshLayout, along with a refresh listener.\r\n    ptrLayout.setPullToRefreshAttacher(mPullToRefreshAttacher, this);\r\n    \r\n}\r\n```\r\nSee the [ScrollView](samples/stock/src/uk/co/senab/actionbarpulltorefresh/samples/stock/ScrollViewActivity.java) sample for more info.\r\n\r\n--\r\n\r\n## Fragments\r\n\r\nOne thing to note is that the `PullToRefreshAttacher` **needs** to be created in the `onCreate()` phase of the Activity. If you plan on using this library with Fragments then the best practice is for your Activity to create the `PullToRefreshAttacher`, and then have your fragments retrieve it from the Activity.\r\n\r\nAn example is provided in the [Fragment & Tabs](samples/stock/src/uk/co/senab/actionbarpulltorefresh/samples/stock/FragmentTabsActivity.java) sample.\r\n\r\n## Customisation\r\n\r\nSee the [Customisation](Customisation.md) page for more information.\r\n\r\n## License\r\n\r\n    Copyright 2013 Chris Banes\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}